48.	Create an Abstract class Processor with int member variable data  and method showData to display data value. Create abstract method process() to define processing of member data. Create a class  Factorial using abstract class Processor  to calculate and print factorial of a number by overriding the process method. b. Create a class Circle using abstract class Processor to calculate and print area of a circle by overriding the process method.Ask user to enter choice (factorial or circle area).  Also ask data to work upon. Use Processor class reference to achieve this mechanism.
>   
import java.util.Scanner;
abstract class Processor{
    int data;
    void showData(){
        System.out.print(data);
    }
    abstract void process(int n);
}

class Factorial extends Processor{
    void process(int n){
        int j=n;
        for(int i = n-1; i>0; i--){
            j*=i;
        }
        System.out.print("Factorial of "+n+" : ");
        data = j;
    }
}

class Circle extends Processor{
    void process(int n){
        data = (int)(3.14*n*n);
        System.out.print("Area of "+n+" : ");

    }
}
public class AbstractPro_48 {
    public static void main(String args[]){
        System.out.println("What do you want to Calculate Choose one option :  Area of Circle or Factorial : ");
        System.out.println("1. Area of Circle ");
        System.out.println("2. Factorial of a number");
        Scanner sc = new Scanner(System.in);
        int num = sc.nextInt();
        System.out.println("Enter a number : ");
        int c = sc.nextInt();
        if(num == 1 ){
            Processor p = new Circle();
            p.process(c);
            p.showData();
        }
        if(num == 2){
            Processor f = new Factorial();
            f.process(c);
            f.showData();
        }

        
    }
}
------------------------------------------------------------------------------------------------------------------

49.	Create Interface Taxable with members salesTax=7% and incomeTax=10.5%. create abstract method calcTax(). a. Create class Employee(empId,name,salary) and implement Taxable to calculate incomeTax on yearly salary. b. Create class Product(pid,price,quantity) and implement Taxable to calculate salesTax on unit price of product. c. Create class for main method(Say XYZ), accept employee information and a product information from user and print income tax and sales tax respectively.
>   //49.	Create Interface Taxable with members salesTax=7% and incomeTax=10.5%. create abstract method calcTax(). 
//  a. Create class Employee(empId,name,salary) and implement Taxable to calculate incomeTax on yearly salary. 
//  b. Create class Product(pid,price,quantity) and implement Taxable to calculate salesTax on unit price of product. 
//  c. Create class for main method(Say XYZ), accept employee information and a product information from user and 
//  print income tax and sales tax respectively.
import java.util.Scanner;
interface Taxable{
    int salesTax=7;
    double incomeTax = 10.5;
    abstract void calcTax();
}
class Employee implements Taxable{
    int empId;
    String name;
    double salary;

    Employee(int empId, String name, double salary){
        this.empId = empId;
        this.name = name;
        this.salary = salary;
    }
    public void calcTax(){
       double incomeTax1 = salary * 10.5;
       System.out.println("Income tax is : "+incomeTax1);
    }
}

class Product implements Taxable{
    int pid;
    int price;
    int quantity;
    public void calcTax(){
        double salestax1 = price * 7;
       System.out.println("Sales tax is : "+salestax1);
    }

}
public class Interface_49 {
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter Employee details : ");
        System.out.print("Employee ID : ");
        int empId = sc.nextInt();

        System.out.print("Employee Name : ");
        String eName = sc.next();

        System.out.print("Employee Salary : ");
        double eSal = sc.nextDouble();

        System.out.print("Product ID : ");
        int pid = sc.nextInt();

        System.out.print("Product Price : ");
        int price = sc.nextInt();

        System.out.print("Product Quantity : ");
        int qty = sc.nextInt();

        Employee e = new Employee(empId,eName,eSal);
        e.calcTax();


    }
}

--------------------------------------------------------------------------------------------------------------